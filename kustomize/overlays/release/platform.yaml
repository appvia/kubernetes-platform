---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: sync-platform
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]

  ## We read in the cluster definition from the tenant repository, using
  ## the configuration to produce a platform application set for each
  generators:
    - git:
        repoURL: https://github.com/gambol99/eks-tenant.git
        revision: HEAD
        files:
          - path: clusters/grn.yaml

  ## Sync Policy for the ApplicationSet
  syncPolicy:
    # Prevents ApplicationSet controller from modifying Applications.
    applicationsSync: create-update

  ## Render a platform application set from the cluster definition
  template:
    metadata:
      name: "platform"
      namespace: argocd
      labels:
        platform.local/tenant: "{{ .cluster_name }}"
        platform.local/environment: "{{ .environment }}"
      annotations:
        app.kubernetes.io/name: platform
        app.kubernetes.io/managed-by: argocd
        app.kubernetes.io/instance: platform
        app.kubernetes.io/part-of: platform
        app.kubernetes.io/environment: "{{ .environment }}"
        app.kubernetes.io/type: platform

    ## The source to read the platform resources from
    spec:
      project: default
      source:
        repoURL: "{{ .platform_repository }}"
        targetRevision: "{{ .platform_revision }}"
        path: "kustomize/base"
        kustomize:
          patches:
            - target:
                kind: Application
                name: registration
              patch: |
                - op: replace
                  path: /spec/sources/0/repoURL
                  value: "{{ .platform_repository }}"
                - op: replace
                  path: /spec/sources/0/targetRevision
                  value: "{{ .platform_revision }}"
                - op: replace
                  path: /spec/sources/0/helm/valueFiles/0
                  value: "$values/clusters/{{ .cluster_name }}.yaml"
                - op: replace
                  path: /spec/sources/1/repoURL
                  value: "{{ .tenant_repository }}"

            # Here we are patching the platform helm and kustomize application sets
            # to use the platform repository and revision.
            - target:
                kind: ApplicationSet
                annotationSelector: "kustomize.patch.appset.platform=true"
              patch: |
                - op: replace
                  path: /spec/generators/0/matrix/generators/0/git/repoURL  
                  value: "{{ .platform_repository }}"
                - op: replace
                  path: /spec/generators/0/matrix/generators/0/git/revision
                  value: "{{ .platform_revision }}"

            - target:
                kind: ApplicationSet
                annotationSelector: "kustomize.patch.appset.platform=true"
              patch: |
                - op: replace
                  path: /spec/generators/0/matrix/generators/0/git/repoURL
                  value: "{{ .platform_repository }}"
                - op: replace
                  path: /spec/generators/0/matrix/generators/0/git/revision
                  value: "{{ .platform_revision }}"

            ## Here we are patching all the tenant application and system application sets
            ## using a annotation selector.
            - target:
                kind: ApplicationSet
                annotationSelector: "kustomize.patch.appset.tenant=true"
              patch: |
                - op: replace
                  path: /spec/generators/0/git/repoURL
                  value: "{{ .tenant_repository }}"
                - op: replace
                  path: /spec/generators/0/git/revision
                  value: "{{ .tenant_revision }}"
                - op: replace
                  path: /spec/generators/0/git/files/0/path
                  value: "workloads/applications/{{ .cluster_name }}.yaml"

      ## The destination to deploy the resources
      destination:
        server: https://kubernetes.default.svc
        namespace: argocd

      ## Sync policy for the application
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
        retry:
          limit: 20
          backoff:
            duration: 5s
            maxDuration: 1m
        syncOptions:
          - CreateNamespace=false
          - ServerSideApply=true
