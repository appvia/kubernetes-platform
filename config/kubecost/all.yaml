---
#
## Helm Value: https://github.com/kubecost/kubecost/blob/develop/kubecost/values.yaml
#

## The network costs configuration
networkCosts:
  ## The network costs enabled flag
  enabled: true
  ## The prometheus scrape flag
  prometheusScrape: true

## The aggregator configuration
aggregator:
  ## Indicating if the aggregator is enabled
  enabled: true
  ## The log level for the aggregator
  logLevel: info
  # How much daily resolution data to ingest from the federated store bucket,
  # and how much data to keep in the DB before rolling the data off.
  #
  # Note: If increasing this value to backfill historical data, it will take
  # time to gradually ingest & process those historical ETL files. Consider
  # also increasing the resources available to the aggregator as well as the
  # dbConcurrentIngestionCount.
  #
  # default: 91
  retention1d: 91

  # How much hourly resolution data to ingest from the federated store bucket,
  # and how much data to keep in the DB before rolling the data off.
  #
  # default: 49
  retention1h: 49

  # How much 10 minute resolution data to ingest from the federated store bucket,
  # and how much data to keep in the DB before rolling the data off.
  #
  # default: 36
  retention10m: 36

  # How many threads the read database is configured with (i.e. Kubecost API /
  # UI queries). If value is 0, the number of threads is bounded by the
  # number of cores
  # default: 0 is no limit
  dbReadThreads: 0

  # How many threads the write database is configured with (i.e. ingestion of
  # new data from S3). If increasing this value, it is recommended to increase
  # the aggregator's memory requests & limits.
  # default: 1
  dbWriteThreads: 1

  # How many threads to use when ingesting Asset/Allocation/CloudCost data
  # from the federated store bucket. In most cases the default is sufficient,
  # but can be increased if trying to backfill historical data.
  # default: 1
  dbConcurrentIngestionCount: 1

  # Memory limit applied to read database and write database connections. The
  # default of "no limit" is appropriate when first establishing a baseline of
  # resource usage required. It is eventually recommended to set these values
  # such that dbMemoryLimit + dbWriteMemoryLimit < the total memory available
  # to the aggregator pod.
  # default: 0GB is no limit
  dbMemoryLimit: 0GB
  dbWriteMemoryLimit: 0GB

  # If "true" can improve the time it takes to copy the write DB, at the expense
  # of additional memory usage.
  # default: "false"
  dbCopyFull: "false"

  # The number of partitions the datastore is split into for copying. The higher
  # this number, the lower the RAM usage but the longer it takes for new data to
  # show in the Kubecost UI.
  # default: 1
  numDBCopyPartitions: 1

  # stagingEmptyDirSizeLimit changes how large the "staging"
  # /var/configs/waterfowl emptyDir is. It only takes effect in StatefulSet
  # configurations of Aggregator, other configurations are unaffected.
  #
  # It should be set to approximately 8x the size of the largest bingen file in
  # object storage. For example, if your largest bingen file is a daily
  # Allocation file with size 300MiB, this value should be set to approximately
  # 2400Mi. In most environments, the default should suffice.
  stagingEmptyDirSizeLimit: 2Gi

  # Governs storage size of aggregator DB storage. Disk performance is important
  # to aggregator performance. Consider high IOPS for best performance.
  aggregatorDbStorage:
    storageClass: "" # use default storage class
    storageRequest: 128Gi

## The frontend configuration
frontend:
  ## The frontend enabled flag
  enabled: true
  ## Number of replicas to run
  replicas: 2

## Cluster Autoscaler configuration
clusterController:
  ## Indicating if the cluster controller is enabled
  enabled: false

## The forecasting configuration
forecasting:
  ## Indicating if the forecasting is enabled
  enabled: true

## The finops-agent can be installed with the primary, or it can be disabled to allow for a global
## agent deployment that is consistent across all clusters.
finops-agent:
  ## Indicating if the finops-agent is enabled
  enabled: false

## Kubecost Bug Reports
## k8s role bindings to be able to access pods/logs limited to .Release.Namespace
## Ref: https://www.ibm.com/docs/en/kubecost/self-hosted/2.x?topic=capture-bug-report
##
reporting:
  ## Indicating if the log collection is enabled
  logCollection: false

# Enables or disables the sending of anonymized telemetry data to help
# improve Kubecost.
telemetry:
  ## Indicating if the telemetry is enabled
  enabled: false
